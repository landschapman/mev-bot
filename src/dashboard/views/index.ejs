<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>MEV Bot Dashboard</title>
  <style>
    body { font-family: sans-serif; margin: 2em; background: #f8f9fa; }
    h1 { color: #333; }
    .warn { color: #b00; }
    .prices, .spreads { margin-bottom: 2em; }
    .bandwidth { margin-bottom: 1em; }
    table { border-collapse: collapse; width: 100%; background: #fff; }
    th, td { border: 1px solid #ccc; padding: 0.5em 1em; text-align: left; }
    th { background: #eee; }
    .timestamp { color: #888; font-size: 0.9em; }
  </style>
</head>
<body>
  <h1>MEV Bot Dashboard</h1>
  <div class="bandwidth">
    <label>Refresh interval (ms):
      <input id="refreshInput" type="number" min="0" value="<%= refresh %>" style="width:6em;">
    </label>
    <button onclick="setRefresh()">Set</button>
    <button onclick="manualRefresh()">Manual Refresh</button>
    <span class="timestamp" id="ts"></span>
  </div>
  <div class="prices">
    <h2>Latest Prices</h2>
    <table id="prices"><thead><tr><th>DEX</th><th>Price</th></tr></thead><tbody></tbody></table>
  </div>
  <div class="spreads">
    <h2>Top Spreads</h2>
    <table id="spreads"><thead><tr><th>Buy</th><th>Sell</th><th>Profit (%)</th></tr></thead><tbody></tbody></table>
  </div>
  <div class="warn">
    <h2>Warnings</h2>
    <ul id="warns"></ul>
  </div>
  <script>
    let refreshMs = Number(<%= refresh %>);
    let timer = null;
    function setRefresh() {
      refreshMs = Number(document.getElementById('refreshInput').value);
      if (timer) clearInterval(timer);
      if (refreshMs > 0) timer = setInterval(fetchData, refreshMs);
    }
    function manualRefresh() {
      fetchData();
    }
    function updateTs(ts) {
      document.getElementById('ts').textContent = ts ? 'Last update: ' + new Date(ts).toLocaleTimeString() : '';
    }
    async function fetchData() {
      const res = await fetch('/data.json');
      const data = await res.json();
      if (data.prices) {
        const tbody = document.querySelector('#prices tbody');
        tbody.innerHTML = '';
        data.prices.forEach(p => {
          const tr = document.createElement('tr');
          tr.innerHTML = `<td>${p.dex}</td><td>${p.price}</td>`;
          tbody.appendChild(tr);
        });
      }
      if (data.topSpreads) {
        const tbody = document.querySelector('#spreads tbody');
        tbody.innerHTML = '';
        data.topSpreads.forEach(s => {
          const tr = document.createElement('tr');
          tr.innerHTML = `<td>${s.buy}</td><td>${s.sell}</td><td>${s.profit}</td>`;
          tbody.appendChild(tr);
        });
      }
      if (data.warnings) {
        const ul = document.getElementById('warns');
        ul.innerHTML = '';
        data.warnings.forEach(w => {
          const li = document.createElement('li');
          li.textContent = w;
          ul.appendChild(li);
        });
      }
      updateTs(data.timestamp);
    }
    setRefresh();
    if (refreshMs > 0) timer = setInterval(fetchData, refreshMs);
    fetchData();
  </script>
</body>
</html> 